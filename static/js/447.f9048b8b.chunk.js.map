{"version":3,"file":"static/js/447.f9048b8b.chunk.js","mappings":"yMACA,EAA6B,8BAA7B,EAA8E,oCAA9E,EAAqM,mC,4CCMtL,SAASA,IAAa,IAAD,EAChC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAM,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,IAC7CC,EAAAA,EAAAA,YAAU,WACQ,KAAXF,GACCG,EAAAA,EAAAA,IAAYH,GAAQI,MAAK,SAAAC,GACrB,IAAMV,EAAUU,EAASC,KAAI,SAAAC,GAAK,OAAIA,CAAJ,IAElCX,EAAWD,EAAS,IAExBC,EAAW,GAElB,GAAE,CAACI,IAcJ,OACI,iCACI,kBAAMQ,UAAWC,EAAmBC,SAVvB,SAACC,GAClBA,EAAEC,kBACFT,EAAAA,EAAAA,IAAYH,GAAQI,MAAK,SAAAC,GACrBQ,QAAQC,IAAIT,GACZ,IAAMV,EAAUU,EAASC,KAAI,SAAAC,GAAK,OAAIA,CAAJ,IAClCX,EAAWD,EAAS,GAC3B,EAIO,WACY,mBAAQoB,KAAK,SAASP,UAAWC,EAAjC,UACI,gBAAKO,IAAI,GAAGC,IAAKC,EAAKC,MAAM,YAGhC,kBACIX,UAAWC,EACXW,KAAK,QACLL,KAAK,OACLM,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOxB,EACPyB,SA3BH,SAAAd,GACjBZ,EAAmC,KAAnBY,EAAEe,OAAOF,MAAe,CAAExB,OAAQW,EAAEe,OAAOF,OAAS,CAAC,EACxE,OA4BQxB,IAAU,SAAC2B,EAAA,EAAD,CAAMhC,QAASA,MAGrC,CCrDc,SAASiC,IACtB,OACE,+BACI,SAACnC,EAAD,KAGP,C","sources":["webpack://react-homework-template/./src/components/SearchBar/searchBar.module.css?272a","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"searchBar_SearchForm__8WQoY\",\"SearchFormButton\":\"searchBar_SearchFormButton__A3Tv1\",\"SearchFormButtonLabel\":\"searchBar_SearchFormButtonLabel__wQ+ZS\",\"SearchFormInput\":\"searchBar_SearchFormInput__YVlr6\"};","import { useState, useEffect } from \"react\";\nimport styles from './searchBar.module.css';\nimport pic from './search.png';\nimport { List } from \"components/List/List\";\nimport { fetchSearch } from '../../shared/shared';\nimport  { useSearchParams } from 'react-router-dom';\n\nexport default function SearchBar() {\n    const [results, setResults] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const filter = searchParams.get('filter') ?? \"\";\n    useEffect(() => {\n        if(filter !== \"\") {\n            fetchSearch(filter).then(response => {\n                const results = response.map(movie => movie);\n                // console.log(results);\n                setResults(results)});\n        } else {\n            setResults([]);\n        }\n    }, [filter]);\n\n    const handleChange = e => {\n        setSearchParams(e.target.value !== '' ? { filter: e.target.value} : {})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); \n        fetchSearch(filter).then(response => {\n            console.log(response);\n            const results = response.map(movie => movie);\n            setResults(results)});\n    };\n    \n    return (\n        <>\n            <form className={styles.SearchForm} onSubmit={handleSubmit} >\n                        <button type=\"submit\" className={styles.SearchFormButton}>\n                            <img alt=\"\" src={pic} width=\"20px\" />\n                        </button>\n\n                        <input\n                            className={styles.SearchFormInput}\n                            name=\"query\"\n                            type=\"text\"\n                            autoComplete=\"off\"\n                            autoFocus\n                            placeholder=\"Search movies\"\n                            value={filter}\n                            onChange={handleChange}\n                        />\n            </form>\n            {filter && <List results={results}/>}\n        </>\n    )\n}\n","import React from 'react'\nimport SearchBar from 'components/SearchBar/SearchBar'\n\nexport default function Movies() {\n  return (\n    <>\n        <SearchBar/>\n    </>\n  )\n}\n"],"names":["SearchBar","useState","results","setResults","useSearchParams","searchParams","setSearchParams","filter","get","useEffect","fetchSearch","then","response","map","movie","className","styles","onSubmit","e","preventDefault","console","log","type","alt","src","pic","width","name","autoComplete","autoFocus","placeholder","value","onChange","target","List","Movies"],"sourceRoot":""}